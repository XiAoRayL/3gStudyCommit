//约瑟夫问题
#include <bits/stdc++.h>
using namespace std;

struct node {
	int data;
	node *next;
	node *prev;
};

int main() {
	int n, m;
	scanf("%d %d", &n, &m);
	node *head, *p, *now, *t;
	head = new node;
	head->data = 1;
	head->next = NULL;
	now = head;
	//建立链表
	for (int i = 2; i <= n; i++) {
		//now=prev<-p(新节点)->next=NULL
		p = new node;
		p->data = i; //p新节点赋值
		p->prev = now; //将p的前节点指向now(当前节点)
		p->next = NULL;
		now->next = p; //将now与p联接
		now = p; //更新now
	}
	head->prev = now; //循环链表-头节点指向尾节点
	now->next = head; //循环链表-尾节点指向头节点

	now = head; //从head开始
	while ((n--) > 1) {
		for (int i = 1; i < m; i++) { //每隔m就输出，输出后删除此节点
			now = now->next;
		}
		printf("%d ", now->data);
		now->prev->next = now->next;
		now->next->prev = now->prev;
		t = now->prev->next;
		delete now;
		now = t; //更新当前节点
	}
	printf("%d ", now->data);
	delete now;
	return 0;
}
